{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/scripts/components/card.js","webpack://mesto-project/./src/scripts/components/modal.js","webpack://mesto-project/./src/scripts/components/validation.js","webpack://mesto-project/./src/scripts/components/error-notification.js","webpack://mesto-project/./src/scripts/components/api.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["// Функция создания карточки\n// input: card - объект карточки (должен содержать свойства name и link)\n// input: handleDelete - функция удаления карточки\n// input: handleLike - функция добавления/снятия лайка\n// input: handleOpenImage - функция открытия картинки по клику\n// output: DOM-узел новой карточки\n\nfunction createCard(cardData, handleLike, handleDelete, handleOpenImage, userData) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardItem = cardTemplate.querySelector('.places__item').cloneNode(true);\n  const cardImage = cardItem.querySelector('.card__image');\n  const cardDeleteButton = cardItem.querySelector('.card__delete-button');\n  const cardLikeButton = cardItem.querySelector('.card__like-button');\n  const cardLikes = cardItem.querySelector('.card__likes');\n\n  cardItem.querySelector('.card__title').textContent = cardData.name;\n  cardImage.src = cardData.link;\n  cardImage.alt = cardData.name;\n\n  cardImage.addEventListener('click', () => {\n    handleOpenImage(cardData.name, cardData.link);\n  });\n\n  cardLikeButton.addEventListener('click', handleLike);\n\n  if (userData) {\n    isOwnerStatusCheck(cardData, userData) ? cardDeleteButton.addEventListener('click', handleDelete) : cardDeleteButton.remove();\n    isLikedStatusCheck(cardData, userData) ? likeCard(cardLikeButton, true) : likeCard(cardLikeButton, false);\n  } else {\n    cardDeleteButton.addEventListener('click', handleDelete);\n  };\n\n  if (cardData.likes) {\n    cardLikes.textContent = `${cardData.likes.length}`;\n  };\n  \n  return cardItem;\n};\n\n// Функция удаления карточки\n// input: itemToDelete - DOM-узел карточки\n\nfunction deleteCard(itemToDelete) {\n  itemToDelete.remove();\n};\n\n// Функция добавления/снятия лайка\n// input: itemToLike - DOM элемент кнопки лайка\n\nfunction likeCard(itemToLike, chekStatus) {\n  itemToLike.classList.toggle('card__like-button_is-active', chekStatus);\n};\n\n// Функция проверки статуса лайка пользователем\n\nfunction isLikedStatusCheck (cardData, userData) {\n  return cardData.likes.some(like => like['_id'] === userData['_id']);\n};\n\n// Функция проверки создателя карточки относительно текущего пользователя\n\nfunction isOwnerStatusCheck (cardData, userData) {\n  return cardData.owner['_id'] === userData['_id'];\n};\n\nexport { createCard, deleteCard, likeCard };","// Функция открытия модального окна\n// input: modal - DOM-узел модального окна\n\nfunction openModal (modal) {\n  modal.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closeByEscape);\n};\n\n// Функция закрытия модального окна по клику\n// input: modal - DOM-узел модального окна\n\nfunction closeModal (modal) {\n  modal.classList.remove('popup_is-opened');\n  removeKeydownListeners();\n};\n\n// Функция закрытия модального окна по нажатию Escape\n// input: event - событие нажатия Escape\n\nfunction closeByEscape (event) {\n  if (event.key === 'Escape') {\n    const openedPopup = document.querySelector('.popup_is-opened');\n    closeModal(openedPopup);\n  };\n};\n\n// Функция удаления обработчиков нажатия Escape\n\nfunction removeKeydownListeners () {\n  document.removeEventListener('keydown', closeByEscape);\n};\n\nexport { openModal, closeModal };","// Пример конфига который принимается на вход enableValidation()\n// const validationConfig = {\n//   formSelector: '.popup__form',\n//   inputSelector: '.popup__input',\n//   submitButtonSelector: '.popup__button',\n//   inactiveButtonClass: 'popup__button_disabled',\n//   inputErrorClass: 'popup__input_type_error',\n//   errorClass: 'popup__error_visible'\n// }; \n\n// Функция отображения ошибки невалидного поля\n\nfunction showInputError(formElement, inputElement, errorMessage, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\n\n// Функция скрытия ошибки невалидного поля\n\nfunction hideInputError(formElement, inputElement, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.textContent = '';\n  errorElement.classList.remove(validationConfig.errorClass);\n};\n\n// Функция проверки валидности поля\n\nfunction checkInputValidity(formElement, inputElement, validationConfig) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n};\n\n// Функция установки слушателей ввода\n\nfunction setEventListeners (formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const submitButtonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  toggleButtonState(inputList, submitButtonElement, validationConfig);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', () => {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, submitButtonElement, validationConfig);\n    });\n  });\n};\n\n// Функция проверки наличия невалидных полей\n\nfunction hasInvalidInput(inputList) {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\n// Функция установки состояния кнопки\n\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = false;\n  };\n};\n\n// Функция включения валидации\n\nfunction enableValidation (validationConfig) {\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n\n  formList.forEach((formElement) => {\n    setEventListeners(formElement, validationConfig);\n  });\n};\n\n// Функция сброса ошибок валидации\n\nfunction clearValidation (formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const submitButtonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationConfig);\n  });\n\n  toggleButtonState(inputList, submitButtonElement, validationConfig);\n};\n\nexport {enableValidation, clearValidation};","let hideTimeout;\n\n// Функция показа уведомления об ошибке\n\nfunction showError(message, errorPopup, errorPopupMessage) {\n  clearTimeout(hideTimeout);\n  \n  errorPopupMessage.textContent = message;\n  \n  errorPopup.classList.add('error-popup_visible');\n  \n  hideTimeout = setTimeout(() => {\n    hideError(errorPopup);\n  }, 4000);\n}\n\n// Функция скрытия уведомления ошибки\n\nfunction hideError(errorPopup) {\n  errorPopup.classList.remove('error-popup_visible');\n};\n\nexport { showError };","// Пример конфига который принимается на вход функциям\n// const apiConfig = {\n//   baseUrl: 'https://nomoreparties.co/v1/wff-fffff',\n//   headers: {\n//     authorization: '025ba30a-6c57-dsccs',\n//     'Content-Type': 'application/json'\n//   }\n// };\n\n// Функция вывода данных профиля\n\nfunction getUserData (apiConfig) {\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция вывода карточек\n\nfunction getCardsData (apiConfig) {\n  return fetch(`${apiConfig.baseUrl}/cards`, {\n    method: 'GET',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция редактирования профиля\n\nfunction patchEditProfile (apiConfig, nameElement, jobElement) {\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      name: nameElement.value,\n      about: jobElement.value\n    })\n  })\n    .then(checkResponse);\n};\n\n// Функция добавления новой карточки\n\nfunction postNewCard (apiConfig, imageNameInput, linkInput) {\n  return fetch(`${apiConfig.baseUrl}/cards`, {\n    method: 'POST',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      name: imageNameInput.value,\n      link: linkInput.value\n    })\n  })\n    .then(checkResponse);\n};\n\n// Функция удаления карточки из базы данных\n\nfunction deleteCardInDatabase (apiConfig, cardId) {\n  return fetch(`${apiConfig.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция лайка карточки\n\nfunction toggleLike (apiConfig, cardId, method) {\n  return fetch(`${apiConfig.baseUrl}/cards/likes/${cardId}`, {\n    method: method,\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция обновления аватара\n\nfunction patchAvatar (apiConfig, linkInput) {\n  return fetch(`${apiConfig.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      avatar: linkInput.value\n    })\n  })\n    .then(checkResponse);\n};\n\n// Функция обработки запроса к серверу\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Запрос к серверу вернул ошибку: ${res.status}`);\n};\n\nexport { getUserData, getCardsData, patchEditProfile, postNewCard, deleteCardInDatabase, toggleLike, patchAvatar };","import '../pages/index.css';\n\n// ------------------ Импорт модулей js ------------------\n\nimport {createCard, deleteCard, likeCard} from './components/card.js';\nimport {openModal, closeModal} from './components/modal.js';\nimport {enableValidation, clearValidation} from './components/validation.js';\nimport {showError} from './components/error-notification.js';\nimport {\n  // Получение данных\n  getUserData,\n  getCardsData,\n  \n  // Работа с профилем\n  patchEditProfile,\n  patchAvatar,\n  \n  // Работа с карточками\n  postNewCard,\n  deleteCardInDatabase,\n  toggleLike\n} from './components/api.js';\n\n// ------------------ DOM узлы ------------------\n\n// Контейнер с карточками\nconst placesList = document.querySelector('.places__list');\n// Кнопки открытия попапов\nconst editButton = document.querySelector('.profile__edit-button');\nconst addButton = document.querySelector('.profile__add-button');\n// Попапы\nconst editPopup = document.querySelector('.popup_type_edit');\nconst addPopup = document.querySelector('.popup_type_new-card');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst editAvatarPopup = document.querySelector('.popup_type_edit-avatar');\nconst acceptDeletePopup = document.querySelector('.popup_type_delete');\n// Массив попапов\nconst popups = document.querySelectorAll('.popup');\n// Узлы для редактирования профиля\nconst nameElement = document.querySelector('.profile__title');\nconst jobElement = document.querySelector('.profile__description');\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\n// Аватар профиля\nconst profileImage = document.querySelector('.profile__image');\n// Узлы для открытия попапа с картинкой\nconst imagePopupPicture = document.querySelector('.popup__image');\nconst caption = document.querySelector('.popup__caption');\n// Узлы для добавления новой карточки\nconst imageNameInput = document.querySelector('.popup__input_type_card-name');\nconst linkInput = document.querySelector('.popup__input_type_url');\n// Узлы для редактирования аватара\nconst avatarPopupInput = document.querySelector('.popup__input_type_avatar-url');\n// Узлы для удаления карточки\nconst acceptDeleteButton = document.querySelector('.popup__button_type_delete');\n// Формы для обработки\nconst editForm = document.forms['edit-profile'];\nconst addForm = document.forms['new-place'];\nconst editAvatarForm = document.forms['edit-avatar'];\n// Узлы для попапа с ошибкой\nconst errorPopup = document.querySelector('.error-popup');\nconst errorMessage = errorPopup.querySelector('.error-popup__message');\n\n// ------------------ Переменные ------------------\n\n// Переменные для обработчика удаления карточки\nlet idCardToDelete;\nlet cardToDelete;\n\n// ------------------ Конфиги ------------------\n\n// Конфиг для валидации\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n// Конфиг для API\nconst apiConfig = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n  headers: {\n    authorization: '025ba30a-6c57-44d8-9f11-68a718bec502',\n    'Content-Type': 'application/json'\n  }\n};\n\n// ------------------ Инициализация страницы ------------------\n\n// Включаем валидацию форм\n\nenableValidation(validationConfig);\n\n// Получаем данные пользователя и карточек с сервера, отображаем их в профиле и рендерим карточки\n\nPromise.all([getUserData(apiConfig), getCardsData(apiConfig)])\n  .then (([userData, cardsData]) => {\n    nameElement.textContent = userData.name;\n    jobElement.textContent = userData.about;\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\n\n    cardsData.forEach(cardData => {\n      const newCardElement = createCard(\n        cardData,\n        (event) => handleLike(newCardElement, event, cardData, apiConfig),\n        () => handleDelete(newCardElement, cardData),\n        handleImageOpener,\n        userData\n      );\n\n      placesList.appendChild(newCardElement);\n    });\n  })\n  .catch((err) => {\n    const error = `Ошибка получения данных о прифиле/карточках.\\n${err}`;  \n    console.log(error);\n    showError(error, errorPopup, errorMessage);\n  })\n;\n\n// ------------------ Слушатели событий ------------------\n\n// Добавляем слушатели открытий попапов\n\neditButton.addEventListener('click', () => {\n  nameInput.value = nameElement.textContent;\n  jobInput.value = jobElement.textContent;\n  clearValidation(editForm, validationConfig);\n  openModal(editPopup);\n});\n\naddButton.addEventListener('click', () => {\n  imageNameInput.value = '';\n  linkInput.value = '';\n  clearValidation(addForm, validationConfig);\n  openModal(addPopup);\n});\n\nprofileImage.addEventListener('click', () => {\n  avatarPopupInput.value = '';\n  clearValidation(editAvatarForm, validationConfig);\n  openModal(editAvatarPopup);\n});\n\n// Добавляем слушатели закрытий попапов по клику\n\npopups.forEach(popup => {\n  const closeButton = popup.querySelector('.popup__close');\n  popup.addEventListener('click', (event) => {\n    if (event.target === closeButton || event.target === popup) {\n      closeModal(popup);\n    };\n  });\n});\n\n// Добавляем обработку отправки формы редактирования профиля\n\neditForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  patchEditProfile(apiConfig, nameInput, jobInput)\n    .then(() => {\n      const newName = nameInput.value;\n      const newJob = jobInput.value;\n\n      nameElement.textContent = newName;\n      jobElement.textContent = newJob;\n\n      closeModal(editPopup);\n    })\n    .catch((err) => {\n      const error = `Ошибка редактирования профиля.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      submitButton.textContent = 'Сохранить';\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку отправки формы добавления новой карточки\n\naddForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  postNewCard(apiConfig, imageNameInput, linkInput)\n    .then((cardData) => {\n      const newCardElement = createCard(\n        cardData,\n        (event) => handleLike(newCardElement, event, cardData, apiConfig),\n        () => handleDelete(newCardElement ,cardData),\n        handleImageOpener\n      );\n\n      placesList.prepend(newCardElement);\n      closeModal(addPopup);\n      imageNameInput.value = '';\n      linkInput.value = '';\n    })\n    .catch((err) => {\n      const error = `Ошибка добавления карточки.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      submitButton.textContent = 'Сохранить';\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку отправки формы редактирования аватара\n\neditAvatarForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  patchAvatar(apiConfig, avatarPopupInput)\n    .then((data) => {\n      profileImage.style.backgroundImage = `url(${data.avatar})`;\n      closeModal(editAvatarPopup);\n      avatarPopupInput.value = '';\n    })\n    .catch((err) => {\n      const error = `Ошибка изменения аватара.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      submitButton.textContent = 'Сохранить';\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку удаления карточки\n\nacceptDeleteButton.addEventListener('click', () => {\n  acceptDeleteButton.disabled = true;\n  acceptDeleteButton.textContent = 'Удаление...';\n\n  deleteCardInDatabase(apiConfig, idCardToDelete)\n        .then(() => {\n          deleteCard(cardToDelete);\n          closeModal(acceptDeletePopup);\n        })\n        .catch((err) => {\n          const error = `Ошибка удаления карточки.\\n${err}`;\n          console.log(error);\n          showError(error, errorPopup, errorMessage);\n        })\n        .finally(() => {\n          acceptDeleteButton.textContent = 'Да';\n          acceptDeleteButton.disabled = false;\n        });\n});\n\n// ------------------ Функции ------------------\n\n// Функция открытия картинки\n\nfunction handleImageOpener (name, link) {\n  imagePopupPicture.src = link;\n  imagePopupPicture.alt = name;\n  caption.textContent = name;\n\n  openModal(imagePopup);\n};\n\n// Функция обработки лайка с отправкой запроса к серверу\n\nfunction handleLike (cardElement, event, cardData, apiConfig) {\n  const likeButton = event.target;\n  const cardLikes = cardElement.querySelector('.card__likes');\n  \n  const isLiked = likeButton.classList.contains('card__like-button_is-active');\n  const method = isLiked ? 'DELETE' : 'PUT';\n\n  likeButton.disabled = true;\n\n  toggleLike(apiConfig, cardData['_id'], method)\n    .then((data) => {\n      cardLikes.textContent = `${data.likes.length}`;\n      likeCard(likeButton);\n    })\n    .catch((err) => {\n      const error = `Ошибка лайка карточки.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      likeButton.disabled = false;\n    });\n};\n\n// Функция обработки удаления\n\nfunction handleDelete (cardElement, cardData) {\n  idCardToDelete = cardData['_id'];\n  cardToDelete = cardElement;\n  openModal(acceptDeletePopup);\n};\n"],"names":["createCard","cardData","handleLike","handleDelete","handleOpenImage","userData","cardItem","document","querySelector","content","cloneNode","cardImage","cardDeleteButton","cardLikeButton","cardLikes","textContent","name","src","link","alt","addEventListener","owner","isOwnerStatusCheck","remove","likes","some","like","isLikedStatusCheck","likeCard","concat","length","itemToLike","chekStatus","classList","toggle","openModal","modal","add","closeByEscape","closeModal","removeEventListener","event","key","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonElement","submitButtonSelector","forEach","hideTimeout","showError","message","errorPopup","errorPopupMessage","clearTimeout","setTimeout","hideError","checkResponse","res","ok","json","Promise","reject","status","idCardToDelete","cardToDelete","placesList","editButton","addButton","editPopup","addPopup","imagePopup","editAvatarPopup","acceptDeletePopup","popups","nameElement","jobElement","nameInput","jobInput","profileImage","imagePopupPicture","caption","imageNameInput","linkInput","avatarPopupInput","acceptDeleteButton","editForm","forms","addForm","editAvatarForm","errorMessage","formSelector","apiConfig","baseUrl","headers","authorization","handleImageOpener","cardElement","likeButton","target","method","contains","cardId","fetch","then","toggleLike","data","catch","err","error","console","log","finally","patternMismatch","setCustomValidity","dataset","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","getUserData","getCardsData","_ref","_ref2","cardsData","about","style","backgroundImage","avatar","newCardElement","appendChild","value","popup","closeButton","preventDefault","submitButton","submitter","body","JSON","stringify","patchEditProfile","newName","newJob","postNewCard","prepend","patchAvatar","deleteCardInDatabase"],"sourceRoot":""}