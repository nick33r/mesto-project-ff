{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/scripts/components/card.js","webpack://mesto-project/./src/scripts/components/modal.js","webpack://mesto-project/./src/scripts/cards.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["// Функция создания карточки\n// input: card - объект карточки (должен содержать свойства name и link)\n// input: handleDelete - функция удаления карточки\n// input: handleLike - функция добавления/снятия лайка\n// input: handleOpenImage - функция открытия картинки по клику\n// output: DOM-узел новой карточки\n\nfunction createCard(card, handleDelete, handleLike, handleOpenImage) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardItem = cardTemplate.querySelector('.places__item').cloneNode(true);\n  const cardImage = cardItem.querySelector('.card__image');\n  const deleteButton = cardItem.querySelector('.card__delete-button');\n  const likeButton = cardItem.querySelector('.card__like-button');\n\n  cardItem.querySelector('.card__title').textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n\n  deleteButton.addEventListener('click', () => {\n    handleDelete(cardItem);\n  });\n\n  likeButton.addEventListener('click', () => {\n    handleLike(likeButton);\n  });\n\n  cardImage.addEventListener('click', () => {\n    handleOpenImage(card.name, card.link);\n  });\n\n  return cardItem;\n};\n\n// Функция удаления карточки\n// input: itemToDelete - DOM-узел карточки\n\nfunction deleteCard(itemToDelete) {\n  itemToDelete.remove();\n};\n\n// Функция добавления/снятия лайка\n// input: itemToLike - DOM элемент кнопки лайка\n\nfunction likeCard(itemToLike) {\n  itemToLike.classList.toggle('card__like-button_is-active');\n};\n\nexport { createCard, deleteCard, likeCard };","// Функция открытия модального окна\n// input: modal - DOM-узел модального окна\n\nfunction openModal (modal) {\n  modal.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closeByEscape);\n};\n\n// Функция закрытия модального окна по клику\n// input: modal - DOM-узел модального окна\n\nfunction closeModal (modal) {\n  modal.classList.remove('popup_is-opened');\n  removeKeydownListeners();\n};\n\n// Функция закрытия модального окна по нажатию Escape\n// input: event - событие нажатия Escape\n\nfunction closeByEscape (event) {\n  if (event.key === 'Escape') {\n    const openedPopup = document.querySelector('.popup_is-opened');\n    closeModal(openedPopup);\n  };\n};\n\n// Функция удаления обработчиков нажатия Escape\n\nfunction removeKeydownListeners () {\n  document.removeEventListener('keydown', closeByEscape);\n};\n\nexport { openModal, closeModal };","const initialCards = [\n    {\n      name: \"Архыз\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\n    },\n    {\n      name: \"Челябинская область\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\n    },\n    {\n      name: \"Иваново\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\n    },\n    {\n      name: \"Камчатка\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\n    },\n    {\n      name: \"Холмогорский район\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\n    },\n    {\n      name: \"Байкал\",\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\n    }\n];\n\nexport {initialCards};","import '../pages/index.css';\n\n// Импорт модулей js\n\nimport {createCard, deleteCard, likeCard} from './components/card.js';\nimport {openModal, closeModal} from './components/modal.js';\n\n// Импорт данных (дефолтные карточки при загрузке страницы)\n\nimport {initialCards} from './cards.js';\n\n// ------------------ DOM узлы ------------------\n\n// Контейнер с карточками\nconst placesList = document.querySelector('.places__list');\n// Кнопки открытия попапов\nconst editButton = document.querySelector('.profile__edit-button');\nconst addButton = document.querySelector('.profile__add-button');\n// Попапы\nconst editPopup = document.querySelector('.popup_type_edit');\nconst addPopup = document.querySelector('.popup_type_new-card');\nconst imagePopup = document.querySelector('.popup_type_image');\n// Массив попапов\nconst popups = document.querySelectorAll('.popup');\n// Узлы для редактирования профиля\nconst nameElement = document.querySelector('.profile__title');\nconst jobElement = document.querySelector('.profile__description');\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\n// Узлы для открытия попапа с картинкой\nconst imagePopupPicture = document.querySelector('.popup__image');\nconst caption = document.querySelector('.popup__caption');\n// Узлы для добавления новой карточки\nconst imageNameInput = document.querySelector('.popup__input_type_card-name');\nconst linkInput = document.querySelector('.popup__input_type_url');\n// Формы для обработки\nconst editForm = document.forms['edit-profile'];\nconst addForm = document.forms['new-place']; \n\n\n// ------------------ Инициализация страницы ------------------\n\n// Вывести дефолтные карточки на страницу при загрузке\n\ninitialCards.forEach(card => {\n  placesList.appendChild(createCard(card, deleteCard, likeCard, openImagePopup));\n});\n\n// ------------------ Слушатели событий ------------------\n\n// Добавляем слушатели открытий попапов\n\neditButton.addEventListener('click', () => {\n  nameInput.value = nameElement.textContent;\n  jobInput.value = jobElement.textContent;\n  openModal(editPopup);\n});\n\naddButton.addEventListener('click', () => {\n  imageNameInput.value = '';\n  linkInput.value = '';\n  openModal(addPopup);\n});\n\n// Добавляем слушатели закрытий попапов по клику\n\npopups.forEach(popup => {\n  const closeButton = popup.querySelector('.popup__close');\n  popup.addEventListener('click', (event) => {\n    if (event.target === closeButton || event.target === popup) {\n      closeModal(popup);\n    };\n  });\n});\n\n// Добавляем обработку отправки формы редактирования профиля\n\neditForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const newName = nameInput.value;\n  const newJob = jobInput.value;\n\n  nameElement.textContent = newName;\n  jobElement.textContent = newJob;\n\n  closeModal(editPopup);\n});\n\n// Добавляем обработку отправки формы добавления новой карточки\n\naddForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const newCard = {\n    name: imageNameInput.value,\n    link: linkInput.value\n  };\n\n  const newCardElement = createCard(newCard, deleteCard, likeCard, openImagePopup);\n  placesList.prepend(newCardElement);\n\n  imageNameInput.value = '';\n  linkInput.value = '';\n\n  closeModal(addPopup);\n});\n\n// Функция открытия картинки\n\nfunction openImagePopup (name, link) {\n  imagePopupPicture.src = link;\n  imagePopupPicture.alt = name;\n  caption.textContent = name;\n\n  openModal(imagePopup);\n};"],"names":["createCard","card","handleDelete","handleLike","handleOpenImage","cardItem","document","querySelector","content","cloneNode","cardImage","deleteButton","likeButton","textContent","name","src","link","alt","addEventListener","deleteCard","itemToDelete","remove","likeCard","itemToLike","classList","toggle","openModal","modal","add","closeByEscape","closeModal","removeEventListener","event","key","placesList","editButton","addButton","editPopup","addPopup","imagePopup","popups","querySelectorAll","nameElement","jobElement","nameInput","jobInput","imagePopupPicture","caption","imageNameInput","linkInput","editForm","forms","addForm","openImagePopup","forEach","appendChild","value","popup","closeButton","target","preventDefault","newName","newJob","newCardElement","prepend"],"sourceRoot":""}