{"version":3,"file":"main.js","mappings":"mBAOA,SAASA,EAAWC,EAAMC,EAAYC,EAAcC,GAAkC,IAAjBC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEpEG,EADeC,SAASC,cAAc,kBAAkBC,QAChCD,cAAc,iBAAiBE,WAAU,GACjEC,EAAYL,EAASE,cAAc,gBACnCI,EAAmBN,EAASE,cAAc,wBAC1CK,EAAiBP,EAASE,cAAc,sBAgB9C,OAdAF,EAASE,cAAc,gBAAgBM,YAAchB,EAAKiB,KAC1DJ,EAAUK,IAAMlB,EAAKmB,KACrBN,EAAUO,IAAMpB,EAAKiB,KAErBJ,EAAUQ,iBAAiB,SAAS,WAClClB,EAAgBH,EAAKiB,KAAMjB,EAAKmB,KAClC,IAEAL,EAAiBO,iBAAiB,QAASnB,GAE3Ca,EAAeM,iBAAiB,QAASpB,GAEzCqB,EAASP,EAAgBX,GAElBI,CACT,CAYA,SAASc,EAASC,EAAYC,GAC5BD,EAAWE,UAAUC,OAAO,8BAA+BF,EAC7D,CCxCA,SAASG,EAAWC,GAClBA,EAAMH,UAAUI,IAAI,mBACpBpB,SAASY,iBAAiB,UAAWS,EACvC,CAKA,SAASC,EAAYH,GACnBA,EAAMH,UAAUO,OAAO,mBAiBvBvB,SAASwB,oBAAoB,UAAWH,EAf1C,CAKA,SAASA,EAAeI,GACJ,WAAdA,EAAMC,KAERJ,EADoBtB,SAASC,cAAc,oBAG/C,CCHA,SAAS0B,EAAeC,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAY3B,cAAc,IAAD+B,OAAKH,EAAaI,GAAE,WAClEJ,EAAab,UAAUO,OAAOO,EAAiBI,iBAC/CH,EAAaxB,YAAc,GAC3BwB,EAAaf,UAAUO,OAAOO,EAAiBK,WACjD,CA4CA,SAASC,EAAkBC,EAAWC,EAAeR,IARrD,SAAyBO,GACvB,OAAOA,EAAUE,MAAK,SAACV,GACrB,OAAQA,EAAaW,SAASC,KAChC,GACF,CAKMC,CAAgBL,IAIlBC,EAActB,UAAUO,OAAOO,EAAiBa,qBAChDL,EAAcM,UAAW,IAJzBN,EAActB,UAAUI,IAAIU,EAAiBa,qBAC7CL,EAAcM,UAAW,EAK7B,CAcA,SAASC,EAAiBjB,EAAaE,GACrC,IAAMO,EAAYS,MAAMC,KAAKnB,EAAYoB,iBAAiBlB,EAAiBmB,gBACrEC,EAAsBtB,EAAY3B,cAAc6B,EAAiBqB,sBAEvEd,EAAUe,SAAQ,SAACvB,GACjBF,EAAeC,EAAaC,EAAcC,EAC5C,IAEAM,EAAkBC,EAAWa,EAAqBpB,EACpD,CCrGA,IAAIuB,EAIJ,SAASC,EAAUC,EAASC,EAAYC,GACtCC,aAAaL,GAEbI,EAAkBlD,YAAcgD,EAEhCC,EAAWxC,UAAUI,IAAI,uBAEzBiC,EAAcM,YAAW,YAO3B,SAAmBH,GACjBA,EAAWxC,UAAUO,OAAO,sBAC9B,CARIqC,CAAUJ,EACZ,GAAG,IACL,CC+FA,SAASK,EAAcC,GACrB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,mCAADlC,OAAoC8B,EAAIK,QAC/D,C,ggCCxFA,IAwCIC,EACAC,EAzCEC,EAAatE,SAASC,cAAc,iBAEpCsE,EAAavE,SAASC,cAAc,yBACpCuE,EAAYxE,SAASC,cAAc,wBAEnCwE,EAAYzE,SAASC,cAAc,oBACnCyE,EAAW1E,SAASC,cAAc,wBAClC0E,EAAa3E,SAASC,cAAc,qBACpC2E,EAAkB5E,SAASC,cAAc,2BACzC4E,EAAoB7E,SAASC,cAAc,sBAE3C6E,EAAS9E,SAASgD,iBAAiB,UAEnC+B,EAAc/E,SAASC,cAAc,mBACrC+E,EAAahF,SAASC,cAAc,yBACpCgF,EAAYjF,SAASC,cAAc,2BACnCiF,EAAWlF,SAASC,cAAc,kCAElCkF,EAAenF,SAASC,cAAc,mBAEtCmF,EAAoBpF,SAASC,cAAc,iBAC3CoF,EAAUrF,SAASC,cAAc,mBAEjCqF,EAAiBtF,SAASC,cAAc,gCACxCsF,EAAYvF,SAASC,cAAc,0BAEnCuF,EAAmBxF,SAASC,cAAc,iCAE1CwF,EAAqBzF,SAASC,cAAc,8BAE5CyF,EAAW1F,SAAS2F,MAAM,gBAC1BC,EAAU5F,SAAS2F,MAAM,aACzBE,EAAiB7F,SAAS2F,MAAM,eAEhCnC,EAAaxD,SAASC,cAAc,gBACpC6F,EAAetC,EAAWvD,cAAc,yBAWxC6B,EAAmB,CACvBiE,aAAc,eACd9C,cAAe,gBACfE,qBAAsB,iBACtBR,oBAAqB,yBACrBT,gBAAiB,0BACjBC,WAAY,wBAGR6D,EAAY,CAChBC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAuMpB,SAASC,EAAmB5F,EAAME,GAChC0E,EAAkB3E,IAAMC,EACxB0E,EAAkBzE,IAAMH,EACxB6E,EAAQ9E,YAAcC,EAEtBU,EAAUyD,EACZ,CAUA,SAASnF,EAAY6G,EAAa5E,EAAO6E,EAAUN,GACjD,IAAMO,EAAa9E,EAAM+E,OACnBC,EAAYJ,EAAYpG,cAAc,gBAGtCyG,EADUH,EAAWvF,UAAU2F,SAAS,+BACrB,SAAW,MAEpCJ,EAAW3D,UAAW,EDlOxB,SAAqBoD,EAAWY,EAAQF,GACtC,OAAOG,MAAM,GAAD7E,OAAIgE,EAAUC,QAAO,iBAAAjE,OAAgB4E,GAAU,CACzDF,OAAQA,EACRR,QAAS,CACPC,cAAeH,EAAUE,QAAQC,iBAGlCW,KAAKjD,EACV,CC4NEkD,CAAWf,EAAWM,EAAc,IAAGI,GACpCI,MAAK,SAACE,GACLP,EAAUlG,YAAc,GAAHyB,OAAMgF,EAAKC,MAAMpH,QACtCgB,EAAS0F,EACX,IACCW,OAAM,SAACC,GACN,IAAMC,EAAQ,4BAAHpF,OAA+BmF,GAC1CE,QAAQC,IAAIF,GACZ9D,EAAU8D,EAAO5D,EAAYsC,EAC/B,IACCyB,SAAQ,WACPhB,EAAW3D,UAAW,CACxB,GACJ,CAIA,SAASnD,EAAc4G,EAAaC,GAClClC,EAAiBkC,EAAc,IAC/BjC,EAAegC,EACfnF,EAAU2D,EACZ,EHxPA,SAA2B/C,GACRgB,MAAMC,KAAK/C,SAASgD,iBAAiBlB,EAAiBiE,eAE9D3C,SAAQ,SAACxB,IAvCpB,SAA4BA,EAAaE,GACvC,IAAMO,EAAYS,MAAMC,KAAKnB,EAAYoB,iBAAiBlB,EAAiBmB,gBACrEC,EAAsBtB,EAAY3B,cAAc6B,EAAiBqB,sBAEvEf,EAAkBC,EAAWa,EAAqBpB,GAElDO,EAAUe,SAAQ,SAACvB,GACjBA,EAAajB,iBAAiB,SAAS,YAvB3C,SAA4BgB,EAAaC,EAAcC,GACjDD,EAAaW,SAASgF,gBACxB3F,EAAa4F,kBAAkB5F,EAAa6F,QAAQ5B,cAEpDjE,EAAa4F,kBAAkB,IAG5B5F,EAAaW,SAASC,MAGzBd,EAAeC,EAAaC,EAAcC,GA5B9C,SAAwBF,EAAaC,EAAciE,EAAchE,GAC/D,IAAMC,EAAeH,EAAY3B,cAAc,IAAD+B,OAAKH,EAAaI,GAAE,WAClEJ,EAAab,UAAUI,IAAIU,EAAiBI,iBAC5CH,EAAaxB,YAAcuF,EAC3B/D,EAAaf,UAAUI,IAAIU,EAAiBK,WAC9C,CAqBIwF,CAAe/F,EAAaC,EAAcA,EAAa+F,kBAAmB9F,EAI9E,CAYM+F,CAAmBjG,EAAaC,EAAcC,GAC9CM,EAAkBC,EAAWa,EAAqBpB,EACpD,GACF,GACF,CA4BIgG,CAAkBlG,EAAaE,EACjC,GACF,CGKAiG,CAAiBjG,GAIjBmC,QAAQ+D,IAAI,CDtFZ,SAAsBhC,GACpB,OAAOa,MAAM,GAAD7E,OAAIgE,EAAUC,QAAO,aAAa,CAC5CS,OAAQ,MACRR,QAAS,CACPC,cAAeH,EAAUE,QAAQC,iBAGlCW,KAAKjD,EACV,CC8EaoE,CAAYjC,GD1EzB,SAAuBA,GACrB,OAAOa,MAAM,GAAD7E,OAAIgE,EAAUC,QAAO,UAAU,CACzCS,OAAQ,MACRR,QAAS,CACPC,cAAeH,EAAUE,QAAQC,iBAGlCW,KAAKjD,EACV,CCkEqCqE,CAAalC,KAC/Cc,MAAM,SAAAqB,GAA2B,IAAAC,EAAAC,EAAAF,EAAA,GAAzBG,EAAQF,EAAA,GAAEG,EAASH,EAAA,GAK1B,OAJArD,EAAYxE,YAAc+H,EAAS9H,KACnCwE,EAAWzE,YAAc+H,EAASE,MAClCrD,EAAasD,MAAMC,gBAAkB,OAAH1G,OAAUsG,EAASK,OAAM,KAEpD,CAACL,EAAUC,EACpB,IACCzB,MAAK,SAAA8B,GAA2B,IAAAC,EAAAR,EAAAO,EAAA,GAAzBN,EAAQO,EAAA,GAAWA,EAAA,GACfzF,SAAQ,SAAAkD,GAChB,IAAMwC,EAAiBxJ,EACrBgH,GACA,SAAC7E,GAAK,OAAKjC,EAAWsJ,EAAgBrH,EAAO6E,EAAUN,EAAU,IACjE,kBAAMvG,EAAaqJ,EAAgBxC,EAAS,GAC5CF,EAuLR,SAA6BE,EAAUgC,GACrC,OAAOhC,EAASW,MAAM1E,MAAK,SAAAwG,GAAI,OAAIA,EAAU,MAAMT,EAAc,GAAC,GACpE,CAxLQU,CAAmB1C,EAAUgC,IAGzB7B,EAAYqC,EAAe7I,cAAc,gBAE/CqE,EAAW2E,YAAYH,GACvBrC,EAAUlG,YAAc,GAAHyB,OAAMsE,EAASW,MAAMpH,QAEtCyG,EAAS4C,MAAW,MAAMZ,EAAc,KACrBQ,EAAe7I,cAAc,wBACrCsB,QAEjB,GACF,IACC2F,OAAM,SAACC,GACN,IAAMC,EAAQ,iDAAHpF,OAAoDmF,GAC/DE,QAAQC,IAAIF,GACZ9D,EAAU8D,EAAO5D,EAAYsC,EAC/B,IAOFvB,EAAW3D,iBAAiB,SAAS,WACnCqE,EAAUkE,MAAQpE,EAAYxE,YAC9B2E,EAASiE,MAAQnE,EAAWzE,YAC5BsC,EAAgB6C,EAAU5D,GAC1BZ,EAAUuD,EACZ,IAEAD,EAAU5D,iBAAiB,SAAS,WAClC0E,EAAe6D,MAAQ,GACvB5D,EAAU4D,MAAQ,GAClBtG,EAAgB+C,EAAS9D,GACzBZ,EAAUwD,EACZ,IAEAS,EAAavE,iBAAiB,SAAS,WACrC4E,EAAiB2D,MAAQ,GACzBtG,EAAgBgD,EAAgB/D,GAChCZ,EAAU0D,EACZ,IAIAE,EAAO1B,SAAQ,SAAAgG,GACb,IAAMC,EAAcD,EAAMnJ,cAAc,iBACxCmJ,EAAMxI,iBAAiB,SAAS,SAACa,GAC3BA,EAAM+E,SAAW6C,GAAe5H,EAAM+E,SAAW4C,GACnD9H,EAAW8H,EAEf,GACF,IAIA1D,EAAS9E,iBAAiB,UAAU,SAACa,GACnCA,EAAM6H,iBAEN,IAAMC,EAAe9H,EAAM+H,UAC3BD,EAAa3G,UAAW,EACxB2G,EAAahJ,YAAc,gBD5I7B,SAA2ByF,EAAWjB,EAAaC,GACjD,OAAO6B,MAAM,GAAD7E,OAAIgE,EAAUC,QAAO,aAAa,CAC5CS,OAAQ,QACRR,QAAS,CACPC,cAAeH,EAAUE,QAAQC,cACjC,eAAgBH,EAAUE,QAAQ,iBAEpCuD,KAAMC,KAAKC,UAAU,CACnBnJ,KAAMuE,EAAYoE,MAClBX,MAAOxD,EAAWmE,UAGnBrC,KAAKjD,EACV,CCiIE+F,CAAiB5D,EAAWf,EAAWC,GACpC4B,MAAK,WACJ,IAAM+C,EAAU5E,EAAUkE,MACpBW,EAAS5E,EAASiE,MAExBpE,EAAYxE,YAAcsJ,EAC1B7E,EAAWzE,YAAcuJ,EAEzBxI,EAAWmD,EACb,IACCyC,OAAM,SAACC,GACN,IAAMC,EAAQ,mCAAHpF,OAAsCmF,GACjDE,QAAQC,IAAIF,GACZ9D,EAAU8D,EAAO5D,EAAYsC,EAC/B,IACCyB,SAAQ,WACPgC,EAAahJ,YAAc,YAC3BgJ,EAAa3G,UAAW,CAC1B,GACJ,IAIAgD,EAAQhF,iBAAiB,UAAU,SAACa,GAClCA,EAAM6H,iBAEN,IAAMC,EAAe9H,EAAM+H,UAC3BD,EAAa3G,UAAW,EACxB2G,EAAahJ,YAAc,gBDzJ7B,SAAsByF,EAAWV,EAAgBC,GAC/C,OAAOsB,MAAM,GAAD7E,OAAIgE,EAAUC,QAAO,UAAU,CACzCS,OAAQ,OACRR,QAAS,CACPC,cAAeH,EAAUE,QAAQC,cACjC,eAAgBH,EAAUE,QAAQ,iBAEpCuD,KAAMC,KAAKC,UAAU,CACnBnJ,KAAM8E,EAAe6D,MACrBzI,KAAM6E,EAAU4D,UAGjBrC,KAAKjD,EACV,CC8IEkG,CAAY/D,EAAWV,EAAgBC,GACpCuB,MAAK,SAACR,GACL,IAAMwC,EAAiBxJ,EACrBgH,GACA,SAAC7E,GAAK,OAAKjC,EAAWsJ,EAAgBrH,EAAO6E,EAAUN,EAAU,IACjE,kBAAMvG,EAAaqJ,EAAgBxC,EAAS,GAC5CF,GAGF9B,EAAW0F,QAAQlB,GACnBxH,EAAWoD,GACXY,EAAe6D,MAAQ,GACvB5D,EAAU4D,MAAQ,EACpB,IACCjC,OAAM,SAACC,GACN,IAAMC,EAAQ,gCAAHpF,OAAmCmF,GAC9CE,QAAQC,IAAIF,GACZ9D,EAAU8D,EAAO5D,EAAYsC,EAC/B,IACCyB,SAAQ,WACPgC,EAAahJ,YAAc,YAC3BgJ,EAAa3G,UAAW,CAC1B,GACJ,IAIAiD,EAAejF,iBAAiB,UAAU,SAACa,GACzCA,EAAM6H,iBAEN,IAAMC,EAAe9H,EAAM+H,UAC3BD,EAAa3G,UAAW,EACxB2G,EAAahJ,YAAc,gBDlJ7B,SAAsByF,EAAWT,GAC/B,OAAOsB,MAAM,GAAD7E,OAAIgE,EAAUC,QAAO,oBAAoB,CACnDS,OAAQ,QACRR,QAAS,CACPC,cAAeH,EAAUE,QAAQC,cACjC,eAAgBH,EAAUE,QAAQ,iBAEpCuD,KAAMC,KAAKC,UAAU,CACnBhB,OAAQpD,EAAU4D,UAGnBrC,KAAKjD,EACV,CCwIEoG,CAAYjE,EAAWR,GACpBsB,MAAK,SAACE,GACL7B,EAAasD,MAAMC,gBAAkB,OAAH1G,OAAUgF,EAAK2B,OAAM,KACvDrH,EAAWsD,GACXY,EAAiB2D,MAAQ,EAC3B,IACCjC,OAAM,SAACC,GACN,IAAMC,EAAQ,8BAAHpF,OAAiCmF,GAC5CE,QAAQC,IAAIF,GACZ9D,EAAU8D,EAAO5D,EAAYsC,EAC/B,IACCyB,SAAQ,WACPgC,EAAahJ,YAAc,YAC3BgJ,EAAa3G,UAAW,CAC1B,GACJ,IAIA6C,EAAmB7E,iBAAiB,SAAS,WAC3C6E,EAAmB7C,UAAW,EAC9B6C,EAAmBlF,YAAc,cDjMnC,SAA+ByF,EAAWY,GACxC,OAAOC,MAAM,GAAD7E,OAAIgE,EAAUC,QAAO,WAAAjE,OAAU4E,GAAU,CACnDF,OAAQ,SACRR,QAAS,CACPC,cAAeH,EAAUE,QAAQC,iBAGlCW,KAAKjD,EACV,CC2LEqG,CAAqBlE,EAAW5B,GACzB0C,MAAK,WACOzC,ELvON9C,SKwOLD,EAAWuD,EACb,IACCqC,OAAM,SAACC,GACN,IAAMC,EAAQ,8BAAHpF,OAAiCmF,GAC5CE,QAAQC,IAAIF,GACZ9D,EAAU8D,EAAO5D,EAAYsC,EAC/B,IACCyB,SAAQ,WACP9B,EAAmBlF,YAAc,KACjCkF,EAAmB7C,UAAW,CAChC,GACR,G","sources":["webpack://mesto-project/./src/scripts/components/card.js","webpack://mesto-project/./src/scripts/components/modal.js","webpack://mesto-project/./src/scripts/components/validation.js","webpack://mesto-project/./src/scripts/components/error-notification.js","webpack://mesto-project/./src/scripts/components/api.js","webpack://mesto-project/./src/scripts/index.js"],"sourcesContent":["// Функция создания карточки\n// input: card - объект карточки (должен содержать свойства name и link)\n// input: handleDelete - функция удаления карточки\n// input: handleLike - функция добавления/снятия лайка\n// input: handleOpenImage - функция открытия картинки по клику\n// output: DOM-узел новой карточки\n\nfunction createCard(card, handleLike, handleDelete, handleOpenImage, isLiked = false) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardItem = cardTemplate.querySelector('.places__item').cloneNode(true);\n  const cardImage = cardItem.querySelector('.card__image');\n  const cardDeleteButton = cardItem.querySelector('.card__delete-button');\n  const cardLikeButton = cardItem.querySelector('.card__like-button');\n\n  cardItem.querySelector('.card__title').textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n\n  cardImage.addEventListener('click', () => {\n    handleOpenImage(card.name, card.link);\n  });\n\n  cardDeleteButton.addEventListener('click', handleDelete);\n\n  cardLikeButton.addEventListener('click', handleLike);\n  \n  likeCard(cardLikeButton, isLiked);\n  \n  return cardItem;\n};\n\n// Функция удаления карточки\n// input: itemToDelete - DOM-узел карточки\n\nfunction deleteCard(itemToDelete) {\n  itemToDelete.remove();\n};\n\n// Функция добавления/снятия лайка\n// input: itemToLike - DOM элемент кнопки лайка\n\nfunction likeCard(itemToLike, chekStatus) {\n  itemToLike.classList.toggle('card__like-button_is-active', chekStatus);\n};\n\nexport { createCard, deleteCard, likeCard };","// Функция открытия модального окна\n// input: modal - DOM-узел модального окна\n\nfunction openModal (modal) {\n  modal.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closeByEscape);\n};\n\n// Функция закрытия модального окна по клику\n// input: modal - DOM-узел модального окна\n\nfunction closeModal (modal) {\n  modal.classList.remove('popup_is-opened');\n  removeKeydownListeners();\n};\n\n// Функция закрытия модального окна по нажатию Escape\n// input: event - событие нажатия Escape\n\nfunction closeByEscape (event) {\n  if (event.key === 'Escape') {\n    const openedPopup = document.querySelector('.popup_is-opened');\n    closeModal(openedPopup);\n  };\n};\n\n// Функция удаления обработчиков нажатия Escape\n\nfunction removeKeydownListeners () {\n  document.removeEventListener('keydown', closeByEscape);\n};\n\nexport { openModal, closeModal };","// Пример конфига который принимается на вход enableValidation()\n// const validationConfig = {\n//   formSelector: '.popup__form',\n//   inputSelector: '.popup__input',\n//   submitButtonSelector: '.popup__button',\n//   inactiveButtonClass: 'popup__button_disabled',\n//   inputErrorClass: 'popup__input_type_error',\n//   errorClass: 'popup__error_visible'\n// }; \n\n// Функция отображения ошибки невалидного поля\n\nfunction showInputError(formElement, inputElement, errorMessage, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\n\n// Функция скрытия ошибки невалидного поля\n\nfunction hideInputError(formElement, inputElement, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.textContent = '';\n  errorElement.classList.remove(validationConfig.errorClass);\n};\n\n// Функция проверки валидности поля\n\nfunction checkInputValidity(formElement, inputElement, validationConfig) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n};\n\n// Функция установки слушателей ввода\n\nfunction setEventListeners (formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const submitButtonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  toggleButtonState(inputList, submitButtonElement, validationConfig);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', () => {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, submitButtonElement, validationConfig);\n    });\n  });\n};\n\n// Функция проверки наличия невалидных полей\n\nfunction hasInvalidInput(inputList) {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\n// Функция установки состояния кнопки\n\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = false;\n  };\n};\n\n// Функция включения валидации\n\nfunction enableValidation (validationConfig) {\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n\n  formList.forEach((formElement) => {\n    setEventListeners(formElement, validationConfig);\n  });\n};\n\n// Функция сброса ошибок валидации\n\nfunction clearValidation (formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const submitButtonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationConfig);\n  });\n\n  toggleButtonState(inputList, submitButtonElement, validationConfig);\n};\n\nexport {enableValidation, clearValidation};","let hideTimeout;\n\n// Функция показа уведомления об ошибке\n\nfunction showError(message, errorPopup, errorPopupMessage) {\n  clearTimeout(hideTimeout);\n  \n  errorPopupMessage.textContent = message;\n  \n  errorPopup.classList.add('error-popup_visible');\n  \n  hideTimeout = setTimeout(() => {\n    hideError(errorPopup);\n  }, 4000);\n}\n\n// Функция скрытия уведомления ошибки\n\nfunction hideError(errorPopup) {\n  errorPopup.classList.remove('error-popup_visible');\n};\n\nexport { showError };","// Пример конфига который принимается на вход функциям\n// const apiConfig = {\n//   baseUrl: 'https://nomoreparties.co/v1/wff-fffff',\n//   headers: {\n//     authorization: '025ba30a-6c57-dsccs',\n//     'Content-Type': 'application/json'\n//   }\n// };\n\n// Функция вывода данных профиля\n\nfunction getUserData (apiConfig) {\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция вывода карточек\n\nfunction getCardsData (apiConfig) {\n  return fetch(`${apiConfig.baseUrl}/cards`, {\n    method: 'GET',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция редактирования профиля\n\nfunction patchEditProfile (apiConfig, nameElement, jobElement) {\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      name: nameElement.value,\n      about: jobElement.value\n    })\n  })\n    .then(checkResponse);\n};\n\n// Функция добавления новой карточки\n\nfunction postNewCard (apiConfig, imageNameInput, linkInput) {\n  return fetch(`${apiConfig.baseUrl}/cards`, {\n    method: 'POST',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      name: imageNameInput.value,\n      link: linkInput.value\n    })\n  })\n    .then(checkResponse);\n};\n\n// Функция удаления карточки из базы данных\n\nfunction deleteCardInDatabase (apiConfig, cardId) {\n  return fetch(`${apiConfig.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция лайка карточки\n\nfunction toggleLike (apiConfig, cardId, method) {\n  return fetch(`${apiConfig.baseUrl}/cards/likes/${cardId}`, {\n    method: method,\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then(checkResponse);\n};\n\n// Функция обновления аватара\n\nfunction patchAvatar (apiConfig, linkInput) {\n  return fetch(`${apiConfig.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      avatar: linkInput.value\n    })\n  })\n    .then(checkResponse);\n};\n\n// Функция обработки запроса к серверу\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Запрос к серверу вернул ошибку: ${res.status}`);\n};\n\nexport { getUserData, getCardsData, patchEditProfile, postNewCard, deleteCardInDatabase, toggleLike, patchAvatar };","import '../pages/index.css';\n\n// ------------------ Импорт модулей js ------------------\n\nimport {createCard, deleteCard, likeCard} from './components/card.js';\nimport {openModal, closeModal} from './components/modal.js';\nimport {enableValidation, clearValidation} from './components/validation.js';\nimport {showError} from './components/error-notification.js';\nimport {\n  // Получение данных\n  getUserData,\n  getCardsData,\n  \n  // Работа с профилем\n  patchEditProfile,\n  patchAvatar,\n  \n  // Работа с карточками\n  postNewCard,\n  deleteCardInDatabase,\n  toggleLike\n} from './components/api.js';\n\n// ------------------ DOM узлы ------------------\n\n// Контейнер с карточками\nconst placesList = document.querySelector('.places__list');\n// Кнопки открытия попапов\nconst editButton = document.querySelector('.profile__edit-button');\nconst addButton = document.querySelector('.profile__add-button');\n// Попапы\nconst editPopup = document.querySelector('.popup_type_edit');\nconst addPopup = document.querySelector('.popup_type_new-card');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst editAvatarPopup = document.querySelector('.popup_type_edit-avatar');\nconst acceptDeletePopup = document.querySelector('.popup_type_delete');\n// Массив попапов\nconst popups = document.querySelectorAll('.popup');\n// Узлы для редактирования профиля\nconst nameElement = document.querySelector('.profile__title');\nconst jobElement = document.querySelector('.profile__description');\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\n// Аватар профиля\nconst profileImage = document.querySelector('.profile__image');\n// Узлы для открытия попапа с картинкой\nconst imagePopupPicture = document.querySelector('.popup__image');\nconst caption = document.querySelector('.popup__caption');\n// Узлы для добавления новой карточки\nconst imageNameInput = document.querySelector('.popup__input_type_card-name');\nconst linkInput = document.querySelector('.popup__input_type_url');\n// Узлы для редактирования аватара\nconst avatarPopupInput = document.querySelector('.popup__input_type_avatar-url');\n// Узлы для удаления карточки\nconst acceptDeleteButton = document.querySelector('.popup__button_type_delete');\n// Формы для обработки\nconst editForm = document.forms['edit-profile'];\nconst addForm = document.forms['new-place'];\nconst editAvatarForm = document.forms['edit-avatar'];\n// Узлы для попапа с ошибкой\nconst errorPopup = document.querySelector('.error-popup');\nconst errorMessage = errorPopup.querySelector('.error-popup__message');\n\n// ------------------ Переменные ------------------\n\n// Переменные для обработчика удаления карточки\nlet idCardToDelete;\nlet cardToDelete;\n\n// ------------------ Конфиги ------------------\n\n// Конфиг для валидации\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n// Конфиг для API\nconst apiConfig = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n  headers: {\n    authorization: '025ba30a-6c57-44d8-9f11-68a718bec502',\n    'Content-Type': 'application/json'\n  }\n};\n\n// ------------------ Инициализация страницы ------------------\n\n// Включаем валидацию форм\n\nenableValidation(validationConfig);\n\n// Получаем данные пользователя и карточек с сервера, отображаем их в профиле и рендерим карточки\n\nPromise.all([getUserData(apiConfig), getCardsData(apiConfig)])\n  .then (([userData, cardsData]) => {\n    nameElement.textContent = userData.name;\n    jobElement.textContent = userData.about;\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\n\n    return [userData, cardsData];\n  })\n  .then(([userData, cardsData]) => {\n    cardsData.forEach(cardData => {\n      const newCardElement = createCard(\n        cardData,\n        (event) => handleLike(newCardElement, event, cardData, apiConfig),\n        () => handleDelete(newCardElement, cardData),\n        handleImageOpener,\n        isLikedStatusCheck(cardData, userData)\n      );\n\n      const cardLikes = newCardElement.querySelector('.card__likes');\n\n      placesList.appendChild(newCardElement);\n      cardLikes.textContent = `${cardData.likes.length}`;\n\n      if (cardData.owner['_id'] !== userData['_id']) {\n        const deleteButton = newCardElement.querySelector('.card__delete-button');\n        deleteButton.remove();\n      }\n    });\n  })\n  .catch((err) => {\n    const error = `Ошибка получения данных о прифиле/карточках.\\n${err}`;  \n    console.log(error);\n    showError(error, errorPopup, errorMessage);\n  })\n;\n\n// ------------------ Слушатели событий ------------------\n\n// Добавляем слушатели открытий попапов\n\neditButton.addEventListener('click', () => {\n  nameInput.value = nameElement.textContent;\n  jobInput.value = jobElement.textContent;\n  clearValidation(editForm, validationConfig);\n  openModal(editPopup);\n});\n\naddButton.addEventListener('click', () => {\n  imageNameInput.value = '';\n  linkInput.value = '';\n  clearValidation(addForm, validationConfig);\n  openModal(addPopup);\n});\n\nprofileImage.addEventListener('click', () => {\n  avatarPopupInput.value = '';\n  clearValidation(editAvatarForm, validationConfig);\n  openModal(editAvatarPopup);\n});\n\n// Добавляем слушатели закрытий попапов по клику\n\npopups.forEach(popup => {\n  const closeButton = popup.querySelector('.popup__close');\n  popup.addEventListener('click', (event) => {\n    if (event.target === closeButton || event.target === popup) {\n      closeModal(popup);\n    };\n  });\n});\n\n// Добавляем обработку отправки формы редактирования профиля\n\neditForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  patchEditProfile(apiConfig, nameInput, jobInput)\n    .then(() => {\n      const newName = nameInput.value;\n      const newJob = jobInput.value;\n\n      nameElement.textContent = newName;\n      jobElement.textContent = newJob;\n\n      closeModal(editPopup);\n    })\n    .catch((err) => {\n      const error = `Ошибка редактирования профиля.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      submitButton.textContent = 'Сохранить';\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку отправки формы добавления новой карточки\n\naddForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  postNewCard(apiConfig, imageNameInput, linkInput)\n    .then((cardData) => {\n      const newCardElement = createCard(\n        cardData,\n        (event) => handleLike(newCardElement, event, cardData, apiConfig),\n        () => handleDelete(newCardElement ,cardData),\n        handleImageOpener\n      );\n\n      placesList.prepend(newCardElement);\n      closeModal(addPopup);\n      imageNameInput.value = '';\n      linkInput.value = '';\n    })\n    .catch((err) => {\n      const error = `Ошибка добавления карточки.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      submitButton.textContent = 'Сохранить';\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку отправки формы редактирования аватара\n\neditAvatarForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  patchAvatar(apiConfig, avatarPopupInput)\n    .then((data) => {\n      profileImage.style.backgroundImage = `url(${data.avatar})`;\n      closeModal(editAvatarPopup);\n      avatarPopupInput.value = '';\n    })\n    .catch((err) => {\n      const error = `Ошибка изменения аватара.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      submitButton.textContent = 'Сохранить';\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку удаления карточки\n\nacceptDeleteButton.addEventListener('click', () => {\n  acceptDeleteButton.disabled = true;\n  acceptDeleteButton.textContent = 'Удаление...';\n\n  deleteCardInDatabase(apiConfig, idCardToDelete)\n        .then(() => {\n          deleteCard(cardToDelete);\n          closeModal(acceptDeletePopup);\n        })\n        .catch((err) => {\n          const error = `Ошибка удаления карточки.\\n${err}`;\n          console.log(error);\n          showError(error, errorPopup, errorMessage);\n        })\n        .finally(() => {\n          acceptDeleteButton.textContent = 'Да';\n          acceptDeleteButton.disabled = false;\n        });\n});\n\n// ------------------ Функции ------------------\n\n// Функция открытия картинки\n\nfunction handleImageOpener (name, link) {\n  imagePopupPicture.src = link;\n  imagePopupPicture.alt = name;\n  caption.textContent = name;\n\n  openModal(imagePopup);\n};\n\n// Функция проверки статуса лайка пользователем\n\nfunction isLikedStatusCheck (cardData, userData) {\n  return cardData.likes.some(like => like['_id'] === userData['_id']);\n};\n\n// Функция обработки лайка\n\nfunction handleLike (cardElement, event, cardData, apiConfig) {\n  const likeButton = event.target;\n  const cardLikes = cardElement.querySelector('.card__likes');\n  \n  const isLiked = likeButton.classList.contains('card__like-button_is-active');\n  const method = isLiked ? 'DELETE' : 'PUT';\n\n  likeButton.disabled = true;\n\n  toggleLike(apiConfig, cardData['_id'], method)\n    .then((data) => {\n      cardLikes.textContent = `${data.likes.length}`;\n      likeCard(likeButton);\n    })\n    .catch((err) => {\n      const error = `Ошибка лайка карточки.\\n${err}`;\n      console.log(error);\n      showError(error, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      likeButton.disabled = false;\n    });\n};\n\n// Функция обработки удаления\n\nfunction handleDelete (cardElement, cardData) {\n  idCardToDelete = cardData['_id'];\n  cardToDelete = cardElement;\n  openModal(acceptDeletePopup);\n};\n"],"names":["createCard","card","handleLike","handleDelete","handleOpenImage","isLiked","arguments","length","undefined","cardItem","document","querySelector","content","cloneNode","cardImage","cardDeleteButton","cardLikeButton","textContent","name","src","link","alt","addEventListener","likeCard","itemToLike","chekStatus","classList","toggle","openModal","modal","add","closeByEscape","closeModal","remove","removeEventListener","event","key","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonElement","submitButtonSelector","forEach","hideTimeout","showError","message","errorPopup","errorPopupMessage","clearTimeout","setTimeout","hideError","checkResponse","res","ok","json","Promise","reject","status","idCardToDelete","cardToDelete","placesList","editButton","addButton","editPopup","addPopup","imagePopup","editAvatarPopup","acceptDeletePopup","popups","nameElement","jobElement","nameInput","jobInput","profileImage","imagePopupPicture","caption","imageNameInput","linkInput","avatarPopupInput","acceptDeleteButton","editForm","forms","addForm","editAvatarForm","errorMessage","formSelector","apiConfig","baseUrl","headers","authorization","handleImageOpener","cardElement","cardData","likeButton","target","cardLikes","method","contains","cardId","fetch","then","toggleLike","data","likes","catch","err","error","console","log","finally","patternMismatch","setCustomValidity","dataset","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","getUserData","getCardsData","_ref","_ref2","_slicedToArray","userData","cardsData","about","style","backgroundImage","avatar","_ref3","_ref4","newCardElement","like","isLikedStatusCheck","appendChild","owner","value","popup","closeButton","preventDefault","submitButton","submitter","body","JSON","stringify","patchEditProfile","newName","newJob","postNewCard","prepend","patchAvatar","deleteCardInDatabase"],"sourceRoot":""}