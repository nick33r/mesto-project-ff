{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project/./src/scripts/components/card.js","webpack://mesto-project/./src/scripts/components/modal.js","webpack://mesto-project/./src/scripts/components/validation.js","webpack://mesto-project/./src/scripts/components/error-notification.js","webpack://mesto-project/./src/scripts/index.js","webpack://mesto-project/./src/scripts/components/api.js"],"sourcesContent":["// Функция создания карточки\n// input: card - объект карточки (должен содержать свойства name и link)\n// input: handleDelete - функция удаления карточки\n// input: handleLike - функция добавления/снятия лайка\n// input: handleOpenImage - функция открытия картинки по клику\n// output: DOM-узел новой карточки\n\nfunction createCard(card, handleOpenImage) {\n  const cardTemplate = document.querySelector('#card-template').content;\n  const cardItem = cardTemplate.querySelector('.places__item').cloneNode(true);\n  const cardImage = cardItem.querySelector('.card__image');\n\n  cardItem.querySelector('.card__title').textContent = card.name;\n  cardImage.src = card.link;\n  cardImage.alt = card.name;\n\n  cardImage.addEventListener('click', () => {\n    handleOpenImage(card.name, card.link);\n  });\n\n  return cardItem;\n};\n\n// Функция удаления карточки\n// input: itemToDelete - DOM-узел карточки\n\nfunction deleteCard(itemToDelete) {\n  itemToDelete.remove();\n};\n\n// Функция добавления/снятия лайка\n// input: itemToLike - DOM элемент кнопки лайка\n\nfunction likeCard(itemToLike, chekStatus) {\n  itemToLike.classList.toggle('card__like-button_is-active', chekStatus);\n};\n\nexport { createCard, deleteCard, likeCard };","// Функция открытия модального окна\n// input: modal - DOM-узел модального окна\n\nfunction openModal (modal) {\n  modal.classList.add('popup_is-opened');\n  document.addEventListener('keydown', closeByEscape);\n};\n\n// Функция закрытия модального окна по клику\n// input: modal - DOM-узел модального окна\n\nfunction closeModal (modal) {\n  modal.classList.remove('popup_is-opened');\n  removeKeydownListeners();\n};\n\n// Функция закрытия модального окна по нажатию Escape\n// input: event - событие нажатия Escape\n\nfunction closeByEscape (event) {\n  if (event.key === 'Escape') {\n    const openedPopup = document.querySelector('.popup_is-opened');\n    closeModal(openedPopup);\n  };\n};\n\n// Функция удаления обработчиков нажатия Escape\n\nfunction removeKeydownListeners () {\n  document.removeEventListener('keydown', closeByEscape);\n};\n\nexport { openModal, closeModal };","// Пример конфига который принимается на вход enableValidation()\n// const validationConfig = {\n//   formSelector: '.popup__form',\n//   inputSelector: '.popup__input',\n//   submitButtonSelector: '.popup__button',\n//   inactiveButtonClass: 'popup__button_disabled',\n//   inputErrorClass: 'popup__input_type_error',\n//   errorClass: 'popup__error_visible'\n// }; \n\n// Функция отображения ошибки невалидного поля\n\nfunction showInputError(formElement, inputElement, errorMessage, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(validationConfig.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(validationConfig.errorClass);\n};\n\n// Функция скрытия ошибки невалидного поля\n\nfunction hideInputError(formElement, inputElement, validationConfig) {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(validationConfig.inputErrorClass);\n  errorElement.textContent = '';\n  errorElement.classList.remove(validationConfig.errorClass);\n};\n\n// Функция проверки валидности поля\n\nfunction checkInputValidity(formElement, inputElement, validationConfig) {\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity('');\n  }\n\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n  } else {\n    hideInputError(formElement, inputElement, validationConfig);\n  }\n};\n\n// Функция установки слушателей ввода\n\nfunction setEventListeners (formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const submitButtonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  toggleButtonState(inputList, submitButtonElement, validationConfig);\n\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', () => {\n      checkInputValidity(formElement, inputElement, validationConfig);\n      toggleButtonState(inputList, submitButtonElement, validationConfig);\n    });\n  });\n};\n\n// Функция проверки наличия невалидных полей\n\nfunction hasInvalidInput(inputList) {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\n// Функция установки состояния кнопки\n\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    buttonElement.disabled = false;\n  };\n};\n\n// Функция включения валидации\n\nfunction enableValidation (validationConfig) {\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n\n  formList.forEach((formElement) => {\n    setEventListeners(formElement, validationConfig);\n  });\n};\n\n// Функция сброса ошибок валидации\n\nfunction clearValidation (formElement, validationConfig) {\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n  const submitButtonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n  inputList.forEach((inputElement) => {\n    hideInputError(formElement, inputElement, validationConfig);\n  });\n\n  toggleButtonState(inputList, submitButtonElement, validationConfig);\n};\n\nexport {enableValidation, clearValidation};","let hideTimeout;\n\n// Функция показа уведомления об ошибке\n\nfunction showError(message, errorPopup, errorPopupMessage) {\n  clearTimeout(hideTimeout);\n  \n  errorPopupMessage.textContent = message;\n  \n  errorPopup.classList.add('error-popup_visible');\n  \n  hideTimeout = setTimeout(() => {\n    hideError(errorPopup);\n  }, 3000);\n}\n\n// Функция скрытия уведомления ошибки\n\nfunction hideError(errorPopup) {\n  errorPopup.classList.remove('error-popup_visible');\n};\n\nexport { showError, hideError };","import '../pages/index.css';\n\n// ------------------ Импорт модулей js ------------------\n\nimport {createCard, deleteCard, likeCard} from './components/card.js';\nimport {openModal, closeModal} from './components/modal.js';\nimport {enableValidation, clearValidation} from './components/validation.js';\nimport {showError, hideError} from './components/error-notification.js';\nimport {\n  // Получение данных\n  getUserData,\n  getCardsData,\n  \n  // Работа с профилем\n  patchEditProfile,\n  patchAvatar,\n  \n  // Работа с карточками\n  postNewCard,\n  deleteCardInDatabase,\n  toggleLike\n} from './components/api.js';\n\n// ------------------ DOM узлы ------------------\n\n// Контейнер с карточками\nconst placesList = document.querySelector('.places__list');\n// Кнопки открытия попапов\nconst editButton = document.querySelector('.profile__edit-button');\nconst addButton = document.querySelector('.profile__add-button');\n// Попапы\nconst editPopup = document.querySelector('.popup_type_edit');\nconst addPopup = document.querySelector('.popup_type_new-card');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst editAvatarPopup = document.querySelector('.popup_type_edit-avatar');\nconst acceptDeletePopup = document.querySelector('.popup_type_delete');\n// Массив попапов\nconst popups = document.querySelectorAll('.popup');\n// Узлы для редактирования профиля\nconst nameElement = document.querySelector('.profile__title');\nconst jobElement = document.querySelector('.profile__description');\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\n// Аватар профиля\nconst profileImage = document.querySelector('.profile__image');\n// Узлы для открытия попапа с картинкой\nconst imagePopupPicture = document.querySelector('.popup__image');\nconst caption = document.querySelector('.popup__caption');\n// Узлы для добавления новой карточки\nconst imageNameInput = document.querySelector('.popup__input_type_card-name');\nconst linkInput = document.querySelector('.popup__input_type_url');\n// Узлы для редактирования аватара\nconst avatarPopupInput = document.querySelector('.popup__input_type_avatar-url');\n// Узлы для удаления карточки\nconst acceptDeleteButton = document.querySelector('.popup__button_type_delete');\n// Формы для обработки\nconst editForm = document.forms['edit-profile'];\nconst addForm = document.forms['new-place'];\nconst editAvatarForm = document.forms['edit-avatar'];\n// Переменные для удаления карточки\nlet idCardToDelete;\nlet cardToDelete;\n// Узлы для попапа с ошибкой\nconst errorPopup = document.querySelector('.error-popup');\nconst errorMessage = errorPopup.querySelector('.error-popup__message');\n\n// ------------------ Конфиги ------------------\n\n// Конфиг для валидации\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n// Конфиг для API\nconst apiConfig = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n  headers: {\n    authorization: '025ba30a-6c57-44d8-9f11-68a718bec502',\n    'Content-Type': 'application/json'\n  },\n  userId: ''\n};\n\n// ------------------ Инициализация страницы ------------------\n\n// Включаем валидацию форм\n\nenableValidation(validationConfig);\n\n// Получаем данные пользователя и карточек с сервера, отображаем их в профиле и рендерим карточки\n\nPromise.all([getUserData(apiConfig), getCardsData(apiConfig)])\n  .then (([userData, cardsData]) => {\n    nameElement.textContent = userData.name;\n    jobElement.textContent = userData.about;\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\n\n    apiConfig.userId = userData['_id'];\n\n    return cardsData;\n  })\n  .then((cardsData) => {\n    cardsData.forEach(card => {\n      const newCardElement = createCard(card, openImagePopup);\n      const likeButton = newCardElement.querySelector('.card__like-button');\n      const cardLikes = newCardElement.querySelector('.card__likes');\n\n      placesList.appendChild(newCardElement);\n      cardLikes.textContent = `${card.likes.length}`;\n\n      if (card.likes.length > 0) {\n        const isLiked = card.likes.some(like => like['_id'] === apiConfig.userId);\n\n        if (isLiked) {\n          likeCard(likeButton);\n        }\n      };\n\n      setupCardInteractions(card, newCardElement, apiConfig);\n    });\n  })\n  .catch((err) => {\n    console.log(err);\n    showError(err, errorPopup, errorMessage);\n  })\n;\n\n// ------------------ Слушатели событий ------------------\n\n// Добавляем слушатели открытий попапов\n\neditButton.addEventListener('click', () => {\n  nameInput.value = nameElement.textContent;\n  jobInput.value = jobElement.textContent;\n  clearValidation(editForm, validationConfig);\n  openModal(editPopup);\n});\n\naddButton.addEventListener('click', () => {\n  imageNameInput.value = '';\n  linkInput.value = '';\n  clearValidation(addForm, validationConfig);\n  openModal(addPopup);\n});\n\nprofileImage.addEventListener('click', () => {\n  avatarPopupInput.value = '';\n  clearValidation(editAvatarForm, validationConfig);\n  openModal(editAvatarPopup);\n});\n\n\n\n// Добавляем слушатели закрытий попапов по клику\n\npopups.forEach(popup => {\n  const closeButton = popup.querySelector('.popup__close');\n  popup.addEventListener('click', (event) => {\n    if (event.target === closeButton || event.target === popup) {\n      closeModal(popup);\n    };\n  });\n});\n\nerrorPopup.addEventListener('click', hideError(errorPopup));\n\n// Добавляем обработку отправки формы редактирования профиля\n\neditForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  patchEditProfile(apiConfig, nameInput, jobInput)\n    .then(() => {\n      const newName = nameInput.value;\n      const newJob = jobInput.value;\n\n      nameElement.textContent = newName;\n      jobElement.textContent = newJob;\n    })\n    .catch((err) => {\n      console.log(err);\n      showError(err, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      submitButton.textContent = 'Сохранить';\n      closeModal(editPopup);\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку отправки формы добавления новой карточки\n\naddForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  postNewCard(apiConfig, imageNameInput, linkInput)\n    .then((newCard) => {\n      const newCardElement = createCard(newCard, openImagePopup);\n      setupCardInteractions(newCard, newCardElement, apiConfig);\n      placesList.prepend(newCardElement);\n    })\n    .catch((err) => {\n      console.log(err);\n      showError(err, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      imageNameInput.value = '';\n      linkInput.value = '';\n      submitButton.textContent = 'Сохранить';\n      closeModal(addPopup);\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку отправки формы редактирования аватара\n\neditAvatarForm.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const submitButton = event.submitter;\n  submitButton.disabled = true;\n  submitButton.textContent = 'Сохранение...';\n\n  patchAvatar(apiConfig, avatarPopupInput)\n    .then((data) => {\n      profileImage.style.backgroundImage = `url(${data.avatar})`;\n    })\n    .catch((err) => {\n      console.log(err);\n      showError(err, errorPopup, errorMessage);\n    })\n    .finally(() => {\n      avatarPopupInput.value = '';\n      submitButton.textContent = 'Сохранить';\n      closeModal(editAvatarPopup);\n      submitButton.disabled = false;\n    });\n});\n\n// Добавляем обработку удаления карточки\n\nacceptDeleteButton.addEventListener('click', () => {\n  acceptDeleteButton.disabled = true;\n  acceptDeleteButton.textContent = 'Удаление...';\n\n  deleteCardInDatabase(apiConfig, idCardToDelete)\n        .then(() => {\n          deleteCard(cardToDelete);\n        })\n        .catch((err) => {\n          console.log(err);\n          showError(err, errorPopup, errorMessage);\n        })\n        .finally(() => {\n          acceptDeleteButton.textContent = 'Да';\n          closeModal(acceptDeletePopup);\n          acceptDeleteButton.disabled = false;\n        });\n});\n\n// ------------------ Функции ------------------\n\n// Функция открытия картинки\n\nfunction openImagePopup (name, link) {\n  imagePopupPicture.src = link;\n  imagePopupPicture.alt = name;\n  caption.textContent = name;\n\n  openModal(imagePopup);\n};\n\n// функция добавления слушателей к карточке с запросами на сервер\n\nfunction setupCardInteractions (cardData, newCardElement, apiConfig) {\n  const deleteButton = newCardElement.querySelector('.card__delete-button');\n  const likeButton = newCardElement.querySelector('.card__like-button');\n  const cardLikes = newCardElement.querySelector('.card__likes');\n\n  likeButton.addEventListener('click', () => {\n    const isLiked = likeButton.classList.contains('card__like-button_is-active');\n    const method = isLiked ? 'DELETE' : 'PUT';\n\n    const previousLikes = parseInt(cardLikes.textContent);\n    cardLikes.textContent = isLiked ? previousLikes - 1 : previousLikes + 1;\n\n    const previousButtonState = isLiked;\n    likeCard(likeButton);\n\n    likeButton.disabled = true;\n\n    toggleLike(apiConfig, cardData['_id'], method)\n      .then((data) => {\n        cardLikes.textContent = `${data.likes.length}`;\n      })\n      .catch((err) => {\n        console.log(err);\n        showError(err, errorPopup, errorMessage);\n        likeCard(likeButton, previousButtonState);\n        cardLikes.textContent = previousLikes;\n      })\n      .finally(() => {\n        likeButton.disabled = false;\n      });\n  });\n  \n  if (cardData.owner['_id'] === apiConfig.userId) {\n    deleteButton.addEventListener('click', () => {\n      idCardToDelete = cardData['_id'];\n      cardToDelete = newCardElement;\n      openModal(acceptDeletePopup);\n    });\n  } else {\n    deleteButton.remove();\n  }\n};\n\n","// Пример конфига который принимается на вход функциям\n// const apiConfig = {\n//   baseUrl: 'https://nomoreparties.co/v1/wff-fffff',\n//   headers: {\n//     authorization: '025ba30a-6c57-dsccs',\n//     'Content-Type': 'application/json'\n//   }\n// };\n\n// Функция вывода данных профиля\n\nfunction getUserData (apiConfig) {\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при инициализации пользователя: ${res.status}`);\n    });\n};\n\n// Функция вывода карточек\n\nfunction getCardsData (apiConfig) {\n  return fetch(`${apiConfig.baseUrl}/cards`, {\n    method: 'GET',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при инициализации карточек: ${res.status}`);\n    });\n};\n\n// Функция редактирования профиля\n\nfunction patchEditProfile (apiConfig, nameElement, jobElement) {\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      name: nameElement.value,\n      about: jobElement.value\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при редактировании профиля: ${res.status}`);\n    });\n};\n\n// Функция добавления новой карточки\n\nfunction postNewCard (apiConfig, imageNameInput, linkInput) {\n  return fetch(`${apiConfig.baseUrl}/cards`, {\n    method: 'POST',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      name: imageNameInput.value,\n      link: linkInput.value\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при добавлении карточки: ${res.status}`);\n    });\n};\n\n// Функция удаления карточки из базы данных\n\nfunction deleteCardInDatabase (apiConfig, cardId) {\n  return fetch(`${apiConfig.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then((res) => {\n      if (!res.ok) {\n        return Promise.reject(`Ошибка при удалении карточки: ${res.status}`);\n      }\n    });\n};\n\n// Функция лайка карточки\n\nfunction toggleLike (apiConfig, cardId, method) {\n  return fetch(`${apiConfig.baseUrl}/cards/likes/${cardId}`, {\n    method: method,\n    headers: {\n      authorization: apiConfig.headers.authorization\n    }\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при лайке карточки: ${res.status}`);\n    });\n};\n\n// Функция обновления аватара\n\nfunction patchAvatar (apiConfig, linkInput) {\n  return fetch(`${apiConfig.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: {\n      authorization: apiConfig.headers.authorization,\n      'Content-Type': apiConfig.headers['Content-Type']\n    },\n    body: JSON.stringify({\n      avatar: linkInput.value\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка при обновлении аватара: ${res.status}`);\n    });\n};\n\nexport { getUserData, getCardsData, patchEditProfile, postNewCard, deleteCardInDatabase, toggleLike, patchAvatar };"],"names":["createCard","card","handleOpenImage","cardItem","document","querySelector","content","cloneNode","cardImage","textContent","name","src","link","alt","addEventListener","likeCard","itemToLike","chekStatus","classList","toggle","openModal","modal","add","closeByEscape","closeModal","remove","removeEventListener","event","key","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonElement","submitButtonSelector","forEach","hideTimeout","showError","message","errorPopup","errorPopupMessage","clearTimeout","setTimeout","hideError","idCardToDelete","cardToDelete","placesList","editButton","addButton","editPopup","addPopup","imagePopup","editAvatarPopup","acceptDeletePopup","popups","nameElement","jobElement","nameInput","jobInput","profileImage","imagePopupPicture","caption","imageNameInput","linkInput","avatarPopupInput","acceptDeleteButton","editForm","forms","addForm","editAvatarForm","errorMessage","formSelector","apiConfig","baseUrl","headers","authorization","userId","openImagePopup","setupCardInteractions","cardData","newCardElement","deleteButton","likeButton","cardLikes","isLiked","contains","method","previousLikes","parseInt","previousButtonState","cardId","fetch","then","res","ok","json","Promise","reject","status","toggleLike","data","likes","length","catch","err","console","log","finally","owner","patternMismatch","setCustomValidity","dataset","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","getUserData","getCardsData","_ref","_ref2","userData","cardsData","about","style","backgroundImage","avatar","appendChild","like","value","popup","closeButton","target","preventDefault","submitButton","submitter","body","JSON","stringify","patchEditProfile","newName","newJob","postNewCard","newCard","prepend","patchAvatar","deleteCardInDatabase"],"sourceRoot":""}